// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  name      String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model clothes {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  value       Float
  quantity    Int
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  categorizes categorizes[]
  images      images[]
}

model images {
  id        Int      @id @default(autoincrement())
  imageUrl  String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  clothesId Int      @map("clothes_id")
  clothes   clothes  @relation(fields: [clothesId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model category {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  categorizes categorizes[]
}

model categorizes {
  id         Int      @id @default(autoincrement())
  clothesId  Int      @map("clothes_id")
  clothes    clothes  @relation(fields: [clothesId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId Int      @map("category_id")
  category   category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
}
