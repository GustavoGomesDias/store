name: Build and deploy in Heroku

on:
  push:
    branches:
      - "main"
      - "master"
  pull_request:
    branches:
      - "main"
      - "master"
jobs:
  tests:
    name: run tests
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: setup envs
        run: |
          touch .env
          echo CIPHERS=${{ secrets.CIPHERS }} >> .env
          echo SMTP=${{ secrets.SMTP }} >> .env
          echo MAIL_USER=${{ secrets.MAIL_USER }} >> .env
          echo MAIL_PASS=${{ secrets.MAIL_PASS }} >> .env
          echo MAIL_REPORT=${{ secrets.MAIL_REPORT }} >> .env
          cat .env
      - name: Run unit tests
        run: npm ci && npm test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  build:
    needs: [tests, env]
    name: run build
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: |
          touch .env
          echo NODE_ENV='production' >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo CLOUDNARY_NAME=${{ secrets.CLOUDNARY_NAME }} >> .env
          echo API_CLOUDNARY_KEY=${{ secrets.API_CLOUDNARY_KEY }} >> .env
          echo API_CLOUDNARY_SECRET=${{ secrets.API_CLOUDNARY_SECRET }} >> .env
          echo CIPHERS=${{ secrets.CIPHERS }} >> .env
          echo SMTP=${{ secrets.SMTP }} >> .env
          echo MAIL_USER=${{ secrets.MAIL_USER }} >> .env
          echo MAIL_PASS=${{ secrets.MAIL_PASS }} >> .env
          echo MAIL_REPORT=${{ secrets.MAIL_REPORT }} >> .env
          cat .env
      - run: npm ci
      - run: npm run build
      - run: npm run create-db
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_KEY}}
          heroku_app_name: "api-mom-store"
          heroku_email: "01gustavodias@gmail.com"
