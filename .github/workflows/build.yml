name: Build and deploy in Heroku

on:
  push:
    branches:
      - "main"
      - "master"
  pull_request:
    branches:
      - "main"
      - "master"

env:
  NODE_ENV: production
  CIPHERS: ${{ secrets.CIPHERS }}
  SMTP: ${{ secrets.SMTP }}
  MAIL_USER: ${{ secrets.MAIL_USER }}
  MAIL_PASS: ${{ secrets.MAIL_PASS }}
  MAIL_REPORT: ${{ secrets.MAIL_REPORT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  CLOUDNARY_NAME: ${{ secrets.CLOUDNARY_NAME }}
  API_CLOUDNARY_KEY: ${{ secrets.API_CLOUDNARY_KEY }}
  API_CLOUDNARY_SECRET: ${{ secrets.API_CLOUDNARY_SECRET }}

jobs:
  tests:
    name: run tests
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - name: Run unit tests
        run: npm test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  build:
    needs: [tests]
    name: run build
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - run: npm run create-db
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_KEY}}
          heroku_app_name: "api-mom-store"
          heroku_email: "01gustavodias@gmail.com"
